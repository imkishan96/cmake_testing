#  minimum required cmake version: 3.1.0
cmake_minimum_required(VERSION 3.1.0)

project(RealsenseExamplesGettingStarted)

# Save the command line compile commands in the build output
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

# Make project require C++11
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c11")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
endif()

# Simple non robust way to find the librealsense library
if(WIN32)
    if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "8")
        set(LIBRARY_DIR "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\lib\\x64")          # TODO: Update this variable to correct path - folder where realsense2.lib is found
        set(DLL_DIR "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\bin\\x64")              # TODO: Update this variable to correct path - folder where realsense2.dll is found
    else()
        set(LIBRARY_DIR "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\lib\\x86")          # TODO: Update this variable to correct path - folder where realsense2.lib is found
        set(DLL_DIR "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\bin\\x86")              # TODO: Update this variable to correct path - folder where realsense2.dll is found
    endif()
    set(PROJECT_BINARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/\$\(Configuration\)")                # TODO: Update this variable to correct path - folder to which your project will compile
    set(ADDITIONAL_INCLUDE_DIRS "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\include")   # TODO: Update this variable to correct path - folder where librealsense2 folder is found
endif()

find_library(REALSENSE2_FOUND realsense2 HINTS ${LIBRARY_DIR} REQUIRED)
if(NOT REALSENSE2_FOUND)
    SET(REALSENSE2_FOUND "realsense2")
    message(WARN "Failed to find_library(realsense2)")
endif()

# getting-started
cmake_policy(SET CMP0074 NEW)
find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

find_library(OPENGL_LIB opengl32 REQUIRED)
find_library(OPENGLU_LIB glu32 REQUIRED)
message(${OPENGL_LIB})

set(GLFW_LIB_DIR "E:\\CPP\\glfw-3.3.2.bin.WIN64\\lib-vc2019\\")
find_library(GLFW3_LIB glfw3 PATHS ${GLFW_LIB_DIR})


add_executable(main_cmaketest main_cmaketest.cpp)
include_directories(main_cmaketest ${ADDITIONAL_INCLUDE_DIRS})
target_link_libraries(main_cmaketest ${REALSENSE2_FOUND} ${PCL_LIBRARIES} ${OPENGL_LIB} ${GLFW3_LIB} ${OPENGLU_LIB})
set_target_properties (main_cmaketest PROPERTIES FOLDER Examples)

# Post Build script to copy realsense2.dll
if(WIN32)
message(STATUS "Adding Post build script to copy realsense2.dll to project's binary folder")
message(STATUS "Will try to copy from ${DLL_DIR} to ${PROJECT_BINARY_OUTPUT_PATH}")
add_custom_command(TARGET main_cmaketest POST_BUILD        # Adds a post-build event to main_cmaketest
    COMMAND ${CMAKE_COMMAND} -E copy_if_different              # which executes "cmake - E copy_if_different..."
        "${DLL_DIR}/realsense2.dll"                            # <--this is in-file
        ${PROJECT_BINARY_OUTPUT_PATH})                 # <--this is out-file path
endif()

install(
    TARGETS

    main_cmaketest

    RUNTIME DESTINATION
    ${CMAKE_INSTALL_PREFIX}/bin
)

#cmake_minimum_required(VERSION 2.6)
#project(cmake_testing)
#
#set(REALSENSE2_INCLUDE_DIR "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\include")
#set(REALSENSE2_LIB_DIR "C:/Program Files (x86)/Intel RealSense SDK 2.0/lib/x64/")
#set(REALSENSE2_DLL_DIR "C:\\Program Files (x86)\\Intel RealSense SDK 2.0\\bin\\x64\\")
#set(GLFW_LIB_DIR "E:\\CPP\\glfw-3.3.2.bin.WIN64\\lib-vc2019\\")
#
#include_directories(${REALSENSE2_INCLUDE_DIR})
#find_library(REALSENSE2_LIB realsense2 PATHS ${REALSENSE2_LIB_DIR})
#find_library(GLFW3_LIB glfw3 PATHS ${GLFW_LIB_DIR})
#
#message( "this is glfw3_LIB -----------" ${GLFW3_LIB})
#cmake_policy(SET CMP0074 NEW)
#find_package(PCL REQUIRED)
#include_directories(${PCL_INCLUDE_DIRS})
#link_directories(${PCL_LIBRARY_DIRS})
#add_definitions(${PCL_DEFINITIONS})

#add_executable( main_cmaketest main_cmaketest.cpp)
#
#target_link_libraries(main_cmaketest ${PCL_LIBRARIES} ${REALSENSE2_LIB} ${GLFW3_LIB})
#
#add_custom_command(TARGET main_cmaketest POST_BUILD        # Adds a post-build event to main_cmaketest
#    COMMAND ${CMAKE_COMMAND} -E copy_if_different              # which executes "cmake - E copy_if_different..."
#            "${REALSENSE2_DLL_DIR}realsense2.dll"                            # <--this is in-file
#            ${CMAKE_CURRENT_BINARY_DIR}/\$\(Configuration\))                 # <--this is out-file path